{"remainingRequest":"c:\\Users\\Delta\\codes\\projects\\09\\movie\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\Delta\\codes\\projects\\09\\movie\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"c:\\Users\\Delta\\codes\\projects\\09\\movie\\src\\App.vue","mtime":1573993380930},{"path":"c:\\Users\\Delta\\codes\\projects\\09\\movie\\node_modules\\css-loader\\index.js","mtime":1573310564967},{"path":"c:\\Users\\Delta\\codes\\projects\\09\\movie\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1573310570603},{"path":"c:\\Users\\Delta\\codes\\projects\\09\\movie\\node_modules\\postcss-loader\\src\\index.js","mtime":1573310567750},{"path":"c:\\Users\\Delta\\codes\\projects\\09\\movie\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573310563934},{"path":"c:\\Users\\Delta\\codes\\projects\\09\\movie\\node_modules\\vue-loader\\lib\\index.js","mtime":1573310570603}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"container\">\r\n      <!-- 1-3. 호출하시오. \r\n        필요한 경우 props를 데이터를 보내줍니다.\r\n      -->\r\n      <MovieList :movies='movies' :genres='genres'/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst axios = require('axios');\r\n// 1-1. 저장되어 있는 MovieList 컴포넌트를 불러오고,\r\nimport MovieList from \"./components/movies/MovieList\"\r\nexport default {\r\n  name: 'app',\r\n  // 1-2. 아래에 등록 후\r\n  components: {\r\n    MovieList,\r\n  },\r\n  data() {\r\n    return {\r\n      // 활용할 데이터를 정의하시오.\r\n      movies: [],\r\n      genres: [],\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n\r\n    const MOVIESURL = \"https://gist.githubusercontent.com/edu-john/9b7645f841e402ce7fab2b8b606b7c7e/raw/271285772e7dfbb9b476eb27e1b85ead683d763c/movies.json\"\r\n    const GENRESURL = \"https://gist.githubusercontent.com/djohnkang/7cc43f82b5165779819e3b6ad299965b/raw/b0b5850b55806672cde4666e544b6840548159a2/genres.json\"\r\n    // 0. mounted 되었을 때, \r\n    // 1) 제시된 URL로 요청을 통해 data의 movies 배열에 해당 하는 데이터를 넣으시오. \r\n    // 2) 제시된 URL로 요청을 통해 data의 genres 배열에 해당 하는 데이터를 넣으시오.\r\n    // axios는 위에 호출되어 있으며, node 설치도 완료되어 있습니다.\r\n    axios.get(MOVIESURL)\r\n      .then(result => {\r\n        this.movies = result.data\r\n        // .movies=(result.data)\r\n      })\r\n    axios.get(GENRESURL)\r\n      .then(result => {\r\n        this.genres = result.data\r\n      })\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n"]}]}